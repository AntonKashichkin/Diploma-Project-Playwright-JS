name: API Tests

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Install dependencies
        run: npm ci

      - name: Run API tests
        run: npx playwright test --grep "@api"
        continue-on-error: true

      # Install Allure CLI
      - name: Install Allure CLI
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Install allure-commandline
        run: |
          npm install -g allure-commandline --save-dev
          allure --version

      # Generate Allure Report
      - name: Generate Allure Report
        run: |
          allure generate allure-results --clean -o allure-report

      # Deploy API report to gh-pages (–±–µ–∑ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏ E2E)
      - name: Deploy E2E report to gh-pages
        working-directory: $GITHUB_WORKSPACE
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }}.git
          git fetch origin gh-pages
          git checkout origin/gh-pages -b gh-pages-temp || git checkout -b gh-pages-temp
          mkdir -p allure-history/e2e
          rm -rf allure-history/e2e/*
          cp -r allure-report/* allure-history/e2e/
          bash ./scripts/update-index.sh
          git add allure-history
          git commit -m "Update E2E report"
          git push origin HEAD:gh-pages --force

      # Allure TestOps integration
      - name: Install Allurectl
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/allure-framework/allurectl/releases/latest \
            | grep browser_download_url | grep linux_amd64 | cut -d '"' -f 4)
          curl -sLo allurectl "$DOWNLOAD_URL"
          chmod +x allurectl
          sudo mv allurectl /usr/local/bin/
          allurectl --version

      - name: Create Allure TestOps launch
        id: create_launch
        run: |
          LAUNCH_ID=$(allurectl launch create \
            --launch-name "API Tests - Build #${{ github.run_number }}" \
            --launch-tags "api,ci,github-actions" \
            --project-id ${{ secrets.ALLURE_PROJECT_ID }} \
            --endpoint ${{ secrets.ALLURE_ENDPOINT }} \
            --token ${{ secrets.ALLURE_TOKEN }} \
            --no-header \
            -o json | jq -r '.[0].id')
          echo "LAUNCH_ID=$LAUNCH_ID" >> $GITHUB_ENV

      - name: Upload results to Allure TestOps
        run: |
          allurectl upload allure-results \
            --launch-id $LAUNCH_ID \
            --project-id ${{ secrets.ALLURE_PROJECT_ID }} \
            --endpoint ${{ secrets.ALLURE_ENDPOINT }} \
            --token ${{ secrets.ALLURE_TOKEN }}

      # Telegram notification
      - name: Send Telegram notification
        if: always()
        env:
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          REPORT_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/api/index.html"
          RUN_DATE=$(date +"%Y-%m-%d %H:%M:%S")
          SUMMARY_FILE="allure-report/widgets/summary.json"

          if [ -f "$SUMMARY_FILE" ]; then
            PASSED=$(jq '.statistic.passed' "$SUMMARY_FILE")
            FAILED=$(jq '.statistic.failed' "$SUMMARY_FILE")
            BROKEN=$(jq '.statistic.broken' "$SUMMARY_FILE")
            SKIPPED=$(jq '.statistic.skipped' "$SUMMARY_FILE")
            DURATION=$(jq '.time.duration' "$SUMMARY_FILE")
          else
            PASSED="?"; FAILED="?"; BROKEN="?"; SKIPPED="?"; DURATION="?";
          fi

          MESSAGE="üì¢ *API Tests completed*\n\n"
          MESSAGE+="üóì Date: ${RUN_DATE}\n\n"
          MESSAGE+="‚úÖ Passed: $PASSED\n"
          MESSAGE+="‚ùå Failed: $FAILED\n"
          MESSAGE+="üí• Broken: $BROKEN\n"
          MESSAGE+="‚ö™ Skipped: $SKIPPED\n"
          MESSAGE+="‚è± Duration: ${DURATION} ms\n\n"
          MESSAGE+="üîó *Allure Report:* ${REPORT_URL}"

          curl -s -X POST \
            -H "Content-Type: application/json" \
            -d "{\"chat_id\":\"${TG_CHAT_ID}\",\"text\":\"${MESSAGE}\",\"parse_mode\":\"Markdown\"}" \
            https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage

      # Upload artifacts
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report-api
          path: allure-report
          retention-days: 30

      - name: Upload summary
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: summary-api
          path: allure-report/widgets/summary.json




